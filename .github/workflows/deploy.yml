name: deploy
run-name: ${{ github.actor }} - deploy carl
on:
  push:
    tags: [ 'v[0-9]+.[0-9]+' ]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11.4
        uses: actions/setup-python@v4
        with:
          python-version: '3.11.4'
      - name: Install dependencies
        run: |
                python -m pip install --upgrade pip
                pip install ruff pytest
                if [ -f carl/build/requirements.txt ]; then pip install -r carl/build/requirements.txt; fi
      - name: Lint with ruff
        run: |
                # stop the build if there are Python syntax errors or undefined names
                ruff --format=github --select=E9,F63,F7,F82 --target-version=py37 .
                # default set of ruff rules with GitHub Annotations
                ruff --format=github --target-version=py37 .
      - name: Run Tests
        run: cd carl/build; python -m unittest
  deploy:
    needs: test
    runs-on: self-hosted
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: compose down
        run: |
          cd /deploy
          docker-compose down
          docker ps -q --filter "name=carl_backend" | grep -q . && docker stop carl_backend && docker rm -fv carl_backend || true
          docker ps -q --filter "name=carl_frontend" | grep -q . && docker stop carl_frontend && docker rm -fv carl_frontend || true
      - name: stage
        run: |
          cd /deploy
          rm -rf build
          cp -R /home/runner/_work/Team4/Team4/carl/build /deploy/
      - name: compose-up
        run: |
          cd /deploy
          docker-compose up -d --remove-orphans --force-recreate
      - run: echo "Status:${{ job.status }}."

